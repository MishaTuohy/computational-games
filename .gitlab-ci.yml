stages:
  - build
  - test
  - deploy

variables:
  NEXT_PUBLIC_API_URL: $API_URL
  NEXT_PUBLIC_FIREBASE_API_KEY: $FIREBASE_API_KEY
  NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: $FIREBASE_AUTH_DOMAIN
  NEXT_PUBLIC_FIREBASE_PROJECT_ID: $FIREBASE_PROJECT_ID
  NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: $FIREBASE_STORAGE_BUCKET
  NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: $FIREBASE_MESSAGING_SENDER_ID
  NEXT_PUBLIC_FIREBASE_APP_ID: $FIREBASE_APP_ID

default:
  image: node:18.4.0-alpine

build-hosting:
  stage: build
  script:
    - npm ci
    - npm run build
  artifacts:
    paths:
      - node_modules/

lint-hosting:
  needs: [build-hosting]
  stage: test
  script:
    - npm run lint:fix
  allow_failure: true

test-hosting:
  needs: [build-hosting]
  stage: test
  script:
    - npm run test
    - npm audit --audit-level=high

deploy-functions:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - functions/**/*
  script:
    - npm install -g firebase-tools
    - cd functions
    - npm ci
    - firebase use default
    - firebase deploy --only functions --token $FIREBASE_TOKEN

deploy-hosting:
  needs: [test-hosting]
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - npm install -g firebase-tools
    - npm ci
    - cd functions
    - npm ci
    - cd ..
    - firebase use default
    - firebase experiments:enable webframeworks
    - firebase deploy --only hosting --token $FIREBASE_TOKEN
