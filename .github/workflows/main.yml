name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  NEXT_PUBLIC_API_URL: ${{ secrets.API_URL }}
  NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
  NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
  NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
  NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
  NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
  NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}

jobs:
  build-test:
    runs-on: ubuntu-latest
    container: 
      image: node:16-alpine

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Build app
      run: |
        npm ci
        npm run build

    - name: Lint
      run: npm run lint:fix
      
    - name: Test
      run: npm run test

    - name: Npm Audit
      run: npm audit --audit-level=high

 deploy-functions:
    needs: [build-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: deploy
      run: |
        npm install -g firebase-tools
        cd functions
        npm ci
        firebase use default
        firebase deploy --only hosting --token ${{ secrets.FIREBASE_TOKEN }}

  deploy-app:
    needs: [build-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Install Firebase Tools
      run: |
        npm install -g firebase-tools 
        firebase use default

    - name: deploy
      run: |
        npm install -g firebase-tools
        npm ci
        cd functions
        npm ci
        cd ..
        firebase use default
        firebase experiments:enable webframeworks
        firebase deploy --only hosting --token ${{ secrets.FIREBASE_TOKEN }}
